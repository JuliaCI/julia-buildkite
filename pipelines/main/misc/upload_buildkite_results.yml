steps:
  - group: "Upload"
    steps:
      - label: "upload test results ${TRIPLET?}"
        key:   "upload_results_${TRIPLET?}"
        depends_on:
          # Wait for the builder to finish
          - step: "build_${TRIPLET?}"
          # Wait for the tester to finish
          - step: "test_${TRIPLET?}"
            allow_failure: true
        plugins:
          - JuliaCI/external-buildkite#v1:
              version: "./.buildkite-external-version"
              repo_url: "https://github.com/JuliaCI/julia-buildkite"
          - staticfloat/cryptic#v2:
              variables:
                - BUILDKITE_ANALYTICS_TOKEN="U2FsdGVkX18BUSpNWNimRUOAh2ku0ugS7x3RRy1CfJBCxTLWArJpa1PXKoILfI7q"
          - test-collector#v1.10.1:
              files: "results*.json"
              format: "json"
              missing-error: 0
        timeout_in_minutes: ${TIMEOUT?}
        soft_fail: true
        commands: |
          echo "--- Download test results from test job"
          buildkite-agent artifact download --step "test_${TRIPLET?}" "results*.json" . || true

          # Buildkite expects these results to be uploaded from the job they were associated with
          # and don't provide a way to specify the job id in the `test-collector` plugin,
          # so overwrite BUILDKITE_JOB_ID with the job id from the results file.
          echo "--- Set buildkite job id to that of the test job"
          json_file=$$(find . -name "results*.json" -print -quit)
          if [ -z "$$json_file" ]; then
              echo "No results*.json file found."
              exit 0
          fi
          # Extract the first occurrence of "job_id" from the file
          job_id=$$(jq -r '.[0].tags.job_id' "$$json_file")
          if [ -z "$$job_id" ] || [ "$$job_id" == "null" ]; then
              echo "No job_id found in the JSON file."
              exit 0
          fi
          export BUILDKITE_JOB_ID="$$job_id"
          echo "Buildkite job id set to $$job_id"
        agents:
          queue: "julia"
        env:
          # Receive cryptic token from parent job
          BUILDKITE_PLUGIN_CRYPTIC_BASE64_SIGNED_JOB_ID_SECRET: ${BUILDKITE_PLUGIN_CRYPTIC_BASE64_SIGNED_JOB_ID_SECRET?}
          TRIPLET: "${TRIPLET?}"
