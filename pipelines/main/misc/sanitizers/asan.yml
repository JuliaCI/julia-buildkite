steps:
  - group: "Check"
    steps:
    - label: "asan"
      key: "asan"
      if: (build.source != "schedule") || (pipeline.slug == "julia-buildkite")
      plugins:
        - JuliaCI/external-buildkite#v1:
            version: "./.buildkite-external-version"
            repo_url: "https://github.com/JuliaCI/julia-buildkite"
        - JuliaCI/julia#v1:
            # Drop default "registries" directory, so it is not persisted from execution to execution
            persist_depot_dirs: packages,artifacts,compiled
            version: '1.6'
        - staticfloat/sandbox#v1:
            rootfs_url: https://github.com/JuliaCI/rootfs-images/releases/download/v4.8/llvm_passes.x86_64.tar.gz
            rootfs_treehash: "c7a289a8cc544b234b1e2d7cbcce3e6815359ecd"
            uid: 1000
            gid: 1000
            workspaces:
              - "/cache/repos:/cache/repos"
      timeout_in_minutes: 120
      if: | # We only run the `asan` job on Julia 1.8 and later.
        (pipeline.slug != "julia-release-1-dot-6") && (pipeline.slug != "julia-release-1-dot-7")
      commands: |
        echo "--- Build julia-debug with ASAN"
        contrib/asan/build.sh ./tmp/test-asan -j$${JULIA_CPU_THREADS:?} debug
        echo "--- Run tests"
        ASAN_SYMBOLIZER_PATH=$$(pwd)/tmp/test-asan/toolchain/usr/tools/llvm-symbolizer \
        tmp/test-asan/asan/usr/bin/julia-debug -e 'Base.runtests(ARGS; ncores = Sys.CPU_THREADS)' \
            interpreter \
            intrinsics \
            llvmcall \
            llvmcall2 \
            precompile \
            worlds
      # The above `ASAN_SYMBOLIZER_PATH` reflects `Make.user.asan` setting:
      # https://github.com/JuliaLang/julia/blob/8890aea066f9023525dd78d0dee3ba871adc6c28/contrib/asan/Make.user.asan#L9
      agents:
        queue: "julia"
        sandbox_capable: "true"
        os: "linux"
        arch: "x86_64"
