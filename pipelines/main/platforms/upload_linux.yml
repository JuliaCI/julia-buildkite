steps:
  - group: "Upload"
    steps:
      - label: ":linux: upload ${TRIPLET?}"
        key:   "upload_${TRIPLET?}"
        # We only upload to S3 if one of the following criteria are true:
        # 1. The branch is `master`.
        # 2. The branch is `release-*`.
        # 3. The build is a tag build AND the tag is `v*`.
        # 4. The pipeline is `julia-buildkite`.
        if: (build.branch == "master") || (build.branch =~ /^release-/) || (build.tag =~ /^v/) || (pipeline.slug == "julia-buildkite")
        depends_on:
          # Wait for the builder to finish
          - "build_${TRIPLET?}"
          # Wait for the tester to finish
          - "test_${TRIPLET?}"
        # Prevent multiple pipelines from uploading to S3 simultaneously
        # It is okay for two different triplets to upload simultaneously
        concurrency: 1
        concurrency_group: 'upload/julialangnightlies/${TRIPLET?}'
        plugins:
          - JuliaCI/external-buildkite#v1:
              version: "./.buildkite-external-version"
              repo_url: "https://github.com/JuliaCI/julia-buildkite"
          - JuliaCI/julia#v1:
              # Drop default "registries" directory, so it is not persisted from execution to execution
              persist_depot_dirs: packages,artifacts,compiled
              version: '1'
          - staticfloat/sandbox#v1:
              rootfs_url: https://github.com/JuliaCI/rootfs-images/releases/download/v5.22/aws_uploader.x86_64.tar.gz
              rootfs_treehash: "486b8618fd0184dd869c9282a73bb08aa1411e82"
              uid: 1000
              gid: 1000
              workspaces:
                # Include `/cache/repos` so that our `git` version introspection works.
                - "/cache/repos:/cache/repos"
          - staticfloat/cryptic#v2:
              variables:
                - AWS_ACCESS_KEY_ID="U2FsdGVkX184v87+NPs3j9r/JoIuOrYt4/Z4wnRdklnY17NP8C8AMZvWYLJfT9t1"
                - AWS_SECRET_ACCESS_KEY="U2FsdGVkX1+qptnxR/Mo5jZdH8OQfflRPiQBEhjgZIiTpn8KNCJYh/Cb8xxaUWazlcM9ceOlo0InDubL+J8zdg=="
              files:
                - .buildkite/secrets/tarball_signing.gpg
        timeout_in_minutes: ${TIMEOUT?}
        commands: "bash .buildkite/utilities/upload_julia.sh"
        agents:
          queue: "julia"
          # Only run on `sandbox.jl` machines (not `docker`-isolated ones) since we need nestable sandboxing
          sandbox_capable: "true"
          os: "linux"
          arch: "x86_64"
        env:
          # Receive cryptic token from parent job
          BUILDKITE_PLUGIN_CRYPTIC_BASE64_SIGNED_JOB_ID_SECRET: ${BUILDKITE_PLUGIN_CRYPTIC_BASE64_SIGNED_JOB_ID_SECRET?}
          TRIPLET: "${TRIPLET?}"
