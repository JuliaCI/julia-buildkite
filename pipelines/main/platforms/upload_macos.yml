steps:
  - group: "Upload"
    steps:
      - label: ":macos: upload ${TRIPLET?}"
        key:   "upload_${TRIPLET?}"
        # We only upload to S3 if one of the following criteria are true:
        # 1. The branch is `master`.
        # 2. The branch is `release-*`.
        # 3. The build is a tag build AND the tag is `v*`.
        # 4. The pipeline is `julia-buildkite`.
        if: (build.branch == "master") || (build.branch =~ /^release-/) || (build.tag =~ /^v/) || (pipeline.slug == "julia-buildkite")
        depends_on:
          # Wait for the builder to finish
          - "build_${TRIPLET?}"
          # Wait for the tester to finish
          - "test_${TRIPLET?}"
        # Prevent multiple pipelines from uploading to S3 simultaneously
        # It is okay for two different triplets to upload simultaneously
        concurrency: 1
        concurrency_group: 'upload/julialangnightlies/${TRIPLET?}'
        plugins:
          - JuliaCI/external-buildkite#v1:
              version: "./.buildkite-external-version"
              repo_url: "https://github.com/JuliaCI/julia-buildkite"
          - staticfloat/cryptic#v2:
              variables:
                - AWS_ACCESS_KEY_ID="U2FsdGVkX184v87+NPs3j9r/JoIuOrYt4/Z4wnRdklnY17NP8C8AMZvWYLJfT9t1"
                - AWS_SECRET_ACCESS_KEY="U2FsdGVkX1+qptnxR/Mo5jZdH8OQfflRPiQBEhjgZIiTpn8KNCJYh/Cb8xxaUWazlcM9ceOlo0InDubL+J8zdg=="
                - NOTARIZATION_APPLE_ID="U2FsdGVkX1/b2eyuYolwIaW0DI2YE5tPcMYJ7X7/J5Qz6T/oV6bZEuQqUEet6Jvx"
                - NOTARIZATION_APPLE_KEY="U2FsdGVkX1+z0XUSEnj0vLawcT1/U2wx1YDN6s3V9U5+qhbGwRQuXHNJXPmlNe/o"
              files:
                - .buildkite/secrets/tarball_signing.gpg
                - .buildkite/secrets/macos_codesigning.keychain
        timeout_in_minutes: ${TIMEOUT?}
        retry:
          automatic:
            - exit_status: "*"
              limit: 3
        commands: "bash .buildkite/utilities/upload_julia.sh"
        agents:
          queue: "julia"
          os: "macos"
          # We actually do not need to use the same architecture when signing/uploading
          #arch: "${ARCH}"
        env:
          # Receive cryptic token from parent job
          BUILDKITE_PLUGIN_CRYPTIC_BASE64_SIGNED_JOB_ID_SECRET: ${BUILDKITE_PLUGIN_CRYPTIC_BASE64_SIGNED_JOB_ID_SECRET?}
          TRIPLET: "${TRIPLET?}"
