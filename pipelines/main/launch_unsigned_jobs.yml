# This file launches all the build jobs that _don't_ require secrets access.
# These jobs can pass their output off to jobs that do require secrets access,
# but those privileged steps require signing before they can be run.
#
# Yes, this is creating another layer of indirection; the flow now looks like:
#
#   [webui] -> launch_unsigned_builders.yml -> misc/llvmpasses.yml
#
# when we could theoretically just have the `webui` launch `misc/llvmpasses.yml`,
# however this raises the bar for contributors to add new (unsigned) steps to
# our CI configuration, so I'd rather live with an extra layer of indirection
# and only need to touch the webui configuration when we need to alter
# something about the privileged steps.

env:
  DIFF_FILTER_TARGET_BRANCH: ""

common:
  - diff-filter-build_plugin: &diff-filter-build
      https://github.com/fatteneder/diff-filter-buildkite-plugin#main:
        name: "TRIGGER_BUILD"
        ignore:
          - "*.md"
          - ".*"
          - "julia.spdx.json"
          - "CITATION.*"
          - "typos.toml"
        target_branch: "${DIFF_FILTER_TARGET_BRANCH?}"
  - pr-labels_plugin: &pr-labels
      sv-oss/github-pr-labels#v0.0.2:
        publish-env-var: PULL_REQUEST_LABELS

steps:
  - group: "Build"
    notify:
      - github_commit_status:
          context: "Build"
    steps:
      - label: "Launch build jobs"
        plugins:
          - JuliaCI/external-buildkite#v1:
              version: "./.buildkite-external-version"
              repo_url: "https://github.com/JuliaCI/julia-buildkite"
          - JuliaCI/julia#b4d0bfa510bc399417133adae013385af5c71190: # v1.13.5
              # A few notes:
              # 1. We pin the `JuliaCI/julia` plugin to a full commit hash.
              #    This is intentional. We want to make sure that this script doesn't suddenly
              #    break when a new version of the plugin is released.
              # 2. We specify the Julia version up to patch, e.g. '1.10.6'.
              #    This is intentional. We don't do e.g. '1.10', because we want to make sure
              #    that this script doesn't suddenly break when a new patch release of Julia
              #    is released.
              version: '1.10.6'
          - *diff-filter-build
          - *pr-labels
        commands: |
          FORCE=$(test -n "$(echo $${PULL_REQUEST_LABELS} | grep -E "\bci-force-build\b")" && echo 1 || echo 0)
          BUILD=$(($${TRIGGER_BUILD} || $${FORCE}))
          ### Launch Linux build jobs
          # Regular:
          GROUP="Build" \
              ALLOW_FAIL="false" \
              BUILD="$${BUILD}" \
              bash .buildkite/utilities/arches_pipeline_upload.sh \
              .buildkite/pipelines/main/platforms/build_linux.arches \
              .buildkite/pipelines/main/platforms/build_linux.yml
          # PowerPC (only for Julia prior to 1.12):
          GROUP="Build" \
              ALLOW_FAIL="false" \
              BUILD="$${BUILD}" \
              julia .buildkite/pipelines/main/platforms/launch_powerpc.jl \
              .buildkite/pipelines/main/platforms/build_linux.powerpc.arches \
              .buildkite/pipelines/main/platforms/build_linux.yml
          ### Launch macOS packaging jobs
          GROUP="Build" \
              ALLOW_FAIL="false" \
              BUILD="$${BUILD}" \
              bash .buildkite/utilities/arches_pipeline_upload.sh \
              .buildkite/pipelines/main/platforms/build_macos.arches \
              .buildkite/pipelines/main/platforms/build_macos.yml
          ### Launch FreeBSD build jobs:
          GROUP="Build" \
              ALLOW_FAIL="false" \
              BUILD="$${BUILD}" \
              bash .buildkite/utilities/arches_pipeline_upload.sh \
              .buildkite/pipelines/main/platforms/build_freebsd.arches \
              .buildkite/pipelines/main/platforms/build_freebsd.yml
          ### Launch Windows build jobs:
          GROUP="Build" \
              ALLOW_FAIL="false" \
              BUILD="$${BUILD}" \
              bash .buildkite/utilities/arches_pipeline_upload.sh \
              .buildkite/pipelines/main/platforms/build_windows.arches \
              .buildkite/pipelines/main/platforms/build_windows.yml
        agents:
          queue: "julia"
          os: "linux"
          arch: "x86_64"
  - group: "Check"
    notify:
      - github_commit_status:
          context: "Check"
    steps:
      - label: "Launch check jobs"
        plugins:
          - JuliaCI/external-buildkite#v1:
              version: "./.buildkite-external-version"
              repo_url: "https://github.com/JuliaCI/julia-buildkite"
          - *diff-filter-build
          - *pr-labels
        commands: |
          buildkite-agent pipeline upload .buildkite/pipelines/main/misc/doctest.yml
          buildkite-agent pipeline upload .buildkite/pipelines/main/misc/pdf_docs/build_pdf_docs.yml
          FORCE=$(test -n "$(echo $${PULL_REQUEST_LABELS} | grep -E "\bci-force-build\b")" && echo 1 || echo 0)
          BUILD=$(($${TRIGGER_BUILD} || $${FORCE}))
          if [[ $${BUILD} == 1 ]]; then
            buildkite-agent pipeline upload .buildkite/pipelines/main/misc/analyzegc.yml
            buildkite-agent pipeline upload .buildkite/pipelines/main/misc/embedding.yml
            buildkite-agent pipeline upload .buildkite/pipelines/main/misc/trimming.yml
            buildkite-agent pipeline upload .buildkite/pipelines/main/misc/llvmpasses.yml
            # buildkite-agent pipeline upload .buildkite/pipelines/main/misc/whitespace.yml # Currently runs in GitHub Actions instead of Buildkite

            buildkite-agent pipeline upload .buildkite/pipelines/main/misc/sanitizers/asan.yml
            buildkite-agent pipeline upload .buildkite/pipelines/main/misc/sanitizers/tsan.yml
          fi
        agents:
          queue: "julia"
          os: "linux"
  - group: "Test"
    notify:
      - github_commit_status:
          context: "Test"
    steps:
      - label: "Launch test jobs"
        plugins:
          - JuliaCI/external-buildkite#v1:
              version: "./.buildkite-external-version"
              repo_url: "https://github.com/JuliaCI/julia-buildkite"
          - *diff-filter-build
          - *pr-labels
        commands: |
          export ALLOW_FAIL="false"
          FORCE=$(test -n "$(echo $${PULL_REQUEST_LABELS} | grep -E "\bci-force-build\b")" && echo 1 || echo 0)
          BUILD=$(($${TRIGGER_BUILD} || $${FORCE}))
          if [[ $${BUILD} == 1 ]]; then
            buildkite-agent pipeline upload .buildkite/pipelines/main/misc/gcext.yml
            buildkite-agent pipeline upload .buildkite/pipelines/main/misc/test_revise.yml
            ### Launch Linux test jobs.
            # Regular:
            GROUP="Test" \
                bash .buildkite/utilities/arches_pipeline_upload.sh \
                .buildkite/pipelines/main/platforms/test_linux.arches \
                .buildkite/pipelines/main/platforms/test_linux.yml
            # i686-linux-gnu:
            GROUP="Test" \
                bash .buildkite/utilities/arches_pipeline_upload.sh \
                .buildkite/pipelines/main/platforms/test_linux.i686.arches \
                .buildkite/pipelines/main/platforms/test_linux.i686.yml
            ### Launch macOS test jobs
            GROUP="Test" \
                bash .buildkite/utilities/arches_pipeline_upload.sh \
                .buildkite/pipelines/main/platforms/test_macos.arches \
                .buildkite/pipelines/main/platforms/test_macos.yml
            ### Launch FreeBSD test jobs
            GROUP="Test" \
                bash .buildkite/utilities/arches_pipeline_upload.sh \
                .buildkite/pipelines/main/platforms/test_freebsd.arches \
                .buildkite/pipelines/main/platforms/test_freebsd.yml
            ### Launch windows test jobs
            GROUP="Test" \
                bash .buildkite/utilities/arches_pipeline_upload.sh \
                .buildkite/pipelines/main/platforms/test_windows.arches \
                .buildkite/pipelines/main/platforms/test_windows.yml
          fi
        agents:
          queue: "julia"
          os: "linux"
  - group: "Allow Fail"
    steps:
      - label: "Launch allowed-to-fail build jobs"
        plugins:
          - JuliaCI/external-buildkite#v1:
              version: "./.buildkite-external-version"
              repo_url: "https://github.com/JuliaCI/julia-buildkite"
          - *diff-filter-build
          - *pr-labels
        commands: |
          export ALLOW_FAIL="true"
          FORCE=$(test -n "$(echo $${PULL_REQUEST_LABELS} | grep -E "\bci-force-build\b")" && echo 1 || echo 0)
          BUILD=$(($${TRIGGER_BUILD} || $${FORCE}))
          # Launch Linux allowed-to-fail build jobs
          GROUP="Allow Fail" \
              BUILD="$${BUILD}" \
              bash .buildkite/utilities/arches_pipeline_upload.sh \
              .buildkite/pipelines/main/platforms/build_linux.soft_fail.arches \
              .buildkite/pipelines/main/platforms/build_linux.yml
          # Launch macOS allowed-to-fail build jobs
          GROUP="Allow Fail" \
              BUILD="$${BUILD}" \
              bash .buildkite/utilities/arches_pipeline_upload.sh \
              .buildkite/pipelines/main/platforms/build_macos.soft_fail.arches \
              .buildkite/pipelines/main/platforms/build_macos.yml
        agents:
          queue: "julia"
          os: "linux"
      - label: "Launch allowed-to-fail test jobs"
        plugins:
          - JuliaCI/external-buildkite#v1:
              version: "./.buildkite-external-version"
              repo_url: "https://github.com/JuliaCI/julia-buildkite"
          - JuliaCI/julia#b4d0bfa510bc399417133adae013385af5c71190: # v1.13.5
              # A few notes:
              # 1. We pin the `JuliaCI/julia` plugin to a full commit hash.
              #    This is intentional. We want to make sure that this script doesn't suddenly
              #    break when a new version of the plugin is released.
              # 2. We specify the Julia version up to patch, e.g. '1.10.6'.
              #    This is intentional. We don't do e.g. '1.10', because we want to make sure
              #    that this script doesn't suddenly break when a new patch release of Julia
              #    is released.
              version: '1.10.6'
          - *diff-filter-build
          - *pr-labels
        commands: |
          export ALLOW_FAIL="true"
          FORCE=$(test -n "$(echo $${PULL_REQUEST_LABELS} | grep -E "\bci-force-build\b")" && echo 1 || echo 0)
          BUILD=$(($${TRIGGER_BUILD} || $${FORCE}))
          if [[ $${BUILD} == 1 ]]; then
            ### Launch Linux allowed-to-fail test jobs.
            # Regular:
            GROUP="Allow Fail" \
                bash .buildkite/utilities/arches_pipeline_upload.sh \
                .buildkite/pipelines/main/platforms/test_linux.soft_fail.arches \
                .buildkite/pipelines/main/platforms/test_linux.yml
            # PowerPC (only for Julia prior to 1.12):
            GROUP="Test" \
                julia .buildkite/pipelines/main/platforms/launch_powerpc.jl \
                .buildkite/pipelines/main/platforms/test_linux.powerpc.soft_fail.arches \
                .buildkite/pipelines/main/platforms/test_linux.yml
            ### Launch macOS allowed-to-fail test jobs
            GROUP="Allow Fail" \
                bash .buildkite/utilities/arches_pipeline_upload.sh \
                .buildkite/pipelines/main/platforms/test_macos.soft_fail.arches \
                .buildkite/pipelines/main/platforms/test_macos.yml
            ### Launch FreeBSD allowed-to-fail jobs
            GROUP="Allow Fail" \
                bash .buildkite/utilities/arches_pipeline_upload.sh \
                .buildkite/pipelines/main/platforms/test_freebsd.soft_fail.arches \
                .buildkite/pipelines/main/platforms/test_freebsd.yml
            ### Launch windows allowed-to-fail test jobs
            GROUP="Allow Fail" \
                bash .buildkite/utilities/arches_pipeline_upload.sh \
                .buildkite/pipelines/main/platforms/test_windows.soft_fail.arches \
                .buildkite/pipelines/main/platforms/test_windows.yml
          fi
        agents:
          queue: "julia"
          os: "linux"
