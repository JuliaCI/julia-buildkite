# This file launches all the build jobs that _don't_ require secrets access.
# These jobs can pass their output off to jobs that do require secrets access,
# but those privileged steps require signing before they can be run.
#
# Yes, this is creating another layer of indirection; the flow now looks like:
#
#   [webui] -> launch_unsigned_builders.yml -> misc/llvmpasses.yml
#
# when we could theoretically just have the `webui` launch `misc/llvmpasses.yml`,
# however this raises the bar for contributors to add new (unsigned) steps to
# our CI configuration, so I'd rather live with an extra layer of indirection
# and only need to touch the webui configuration when we need to alter
# something about the privileged steps.

common:
  - diff-filter-build_plugin: &diff-filter-build
      https://github.com/fatteneder/diff-filter-buildkite-plugin#main:
        name: "TRIGGER_BUILD"
        ignore:
          - "*.md"
          - ".*"
          - "julia.spdx.json"
          - "CITATION.*"
          - "typos.toml"
        # TODO: Need this option because BUILDKITE_PULL_REQUEST_BRANCH=main
        # when running tests in Julia-CI/julia-buildkite,
        # but for PRs against Julia/JuliaLang BUILDKITE_PULL_REQUEST_BRANCH=master
        target_branch: "master"
  - pr-labels_plugin: &pr-labels
      sv-oss/github-pr-labels#v0.0.2:
        publish-env-var: PULL_REQUEST_LABELS

steps:
  - group: "Source Build"
    steps:
      - label: "Launch from-source build job"
        plugins:
          - JuliaCI/external-buildkite#v1:
              version: "./.buildkite-external-version"
              repo_url: "https://github.com/JuliaCI/julia-buildkite"
          - *diff-filter-build
          - *pr-labels
        commands: |
          FORCE=$(test -n "$(echo $${PULL_REQUEST_LABELS} | grep "\\<ci-force-build\\>")" && echo 1 || echo 0)
          BUILD=$(($${TRIGGER_BUILD} || $${FORCE}))
          if [[ $${BUILD} == 1 ]]; then
            GROUP="Source Build" \
                ALLOW_FAIL="false" \
                bash .buildkite/utilities/arches_pipeline_upload.sh \
                .buildkite/pipelines/scheduled/platforms/build_linux.schedule.arches \
                .buildkite/pipelines/main/platforms/build_linux.yml
          fi
        agents:
          queue: "julia"
          os: "linux"
          arch: "x86_64" # prevent from running on PiBots
  - group: "Source Tests (Allow Fail)"
    steps:
      - label: "Launch from-source test jobs"
        plugins:
          - JuliaCI/external-buildkite#v1:
              version: "./.buildkite-external-version"
              repo_url: "https://github.com/JuliaCI/julia-buildkite"
        commands: |
          FORCE=$(test -n "$(echo $${PULL_REQUEST_LABELS} | grep "\\<ci-force-build\\>")" && echo 1 || echo 0)
          BUILD=$(($${TRIGGER_BUILD} || $${FORCE}))
          if [[ ${BUILD} == 1 ]]; then
            GROUP="Source Tests (Allow Fail)" \
                ALLOW_FAIL="true" \
                bash .buildkite/utilities/arches_pipeline_upload.sh \
                .buildkite/pipelines/scheduled/platforms/test_linux.schedule.arches \
                .buildkite/pipelines/main/platforms/test_linux.yml
          fi
        agents:
          queue: "julia"
          os: "linux"
          arch: "x86_64" # prevent from running on PiBots
  - group: "no_GPL"
    steps:
      - label: "Launch no_GPL jobs"
        plugins:
          - JuliaCI/external-buildkite#v1:
              version: "./.buildkite-external-version"
              repo_url: "https://github.com/JuliaCI/julia-buildkite"
          - *diff-filter-build
          - *pr-labels
        commands: |
          FORCE=$(test -n "$(echo $${PULL_REQUEST_LABELS} | grep "\\<ci-force-build\\>")" && echo 1 || echo 0)
          BUILD=$(($${TRIGGER_BUILD} || $${FORCE}))
          if [[ $${BUILD} == 1 ]]; then
            GROUP="no_GPL" \
                ALLOW_FAIL="false" \
                bash .buildkite/utilities/arches_pipeline_upload.sh \
                .buildkite/pipelines/scheduled/platforms/build_linux.no_gpl.arches \
                .buildkite/pipelines/main/platforms/build_linux.yml
            GROUP="no_GPL" \
                ALLOW_FAIL="false" \
                bash .buildkite/utilities/arches_pipeline_upload.sh \
                .buildkite/pipelines/scheduled/platforms/build_macos.no_gpl.arches \
                .buildkite/pipelines/main/platforms/build_macos.yml
            GROUP="no_GPL" \
                ALLOW_FAIL="false" \
                bash .buildkite/utilities/arches_pipeline_upload.sh \
                .buildkite/pipelines/scheduled/platforms/build_windows.no_gpl.arches \
                .buildkite/pipelines/main/platforms/build_windows.yml
          fi
        agents:
          queue: "julia"
          os: "linux"
          arch: "x86_64" # prevent from running on PiBots
